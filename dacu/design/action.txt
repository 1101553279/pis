com list:
            com_info
              |
              V
             ---         ---         ---
chead--->   |   | ----> |   | ----> |   | .......->null;
             ---         ---         ---

pcom:
    d <---- p   get:request
        step1: check / fill information && add (pecu request) to comlist
        step2: led_con( pcom_led, LE_BLINK );  
        step3: loud_con( loud, UT_COM, UE_TIP );   
                                        // ut_pcom  -> loud type 
                                        // ue_tip -> loud event tip
    d <---- p   get: hangup
        step1: query   && remove from comlist
        step2: led_con( pcom_led, LE_BK_OFF );
        step3: loud_con( loud, UT_COM, UE_TIP_CLOSE );
                                        // LE_BK_OFF ->  stop led blink
                                        // UE_TIIP_CLOSE -> close ue_tip
    d <---- d:  get: response
        step1: query && remove from comlist && put into setup
                    setup.status = frozen
        setp2: led_con( pcom_led, LE_ON );      
        setp3: loud_con( loud, UT_COM, UE_FROZEN );  
                                        // LE_ON -> set led always on
                                        // UE_FROZEN -> close ue_tip
    d <---- d   get: hangup
        step1: set setup->status
                    setup.status = idle
        step2: led_con( pcom_led, LE_ON_OFF );    
                                        //LE_ON_OFF ->  set led off

    button pushed
        get com:
            step1: query && remove from comlist && put into setup
                        setup.status = setup

            step2: send into com notification to deevice group by network
                        control uic to tell intocom

            step3: led_con( pcom_led, LE_ON );  
            step4: loud_con( loud, UT_COM, UE_COM ); 
            step5: ppt_con( ppt, PT_COM,PE_OPEN );       
                                        // LE_ON -> set led always on
                                        // UE_COM -> set ue_com
                                        // PE_OPEN -> set ppt using
       ------------------------------------------------------------------
        put com:
            step1: send hangup  notification to device group by network
            step2: set setup->status 
                        setup.status = idle
            step3: led_con( pcom_led, LE_ON_OFF ); 
            step4: loud_con( loud, UT_COM, UE_CLOSE );
            step5: ppt_con( ppt, PE_CLOSE );


dcom:
  master:
    button pushed ( com call )
        step1: check status && fill info && add to comlist
               send into com notification to deevice group by network
               control uic to tell call com

        step2: led_con( dcom_led, LE_BLINK ); 

    button pushed ( hangup ( call cancel ) )
        step1: query && remove from comlist
               send into com notification to deevice group by network
               control uic to tell hangup com

        step2: led_con( dcom_led, LE_BLINK_OFF ); 

    d <---- d   get:response
        step1: query && remove from comlist
                set status = setup
            or 
                set status = frozen

        step2: led_con( dcom_led, LE_ON ); 

        step3: loud_con( loud, UT_COM, UE_COM );
    or
        step3: loud_con( loud, UT_COM, UE_FROZEN );

        setp4: ppt_con( ppt, PT_COM, PE_OPEN );
    or 
        step4: none
        
    button pushed ( hangup( put com ) )
        step1: check status
               send hangup  notification to device group by network
               control uic to tell hangup
               status: setup -> idle

        step2: led_con( dcom_led, LE_ON_OFF ); 
        step3: loud_con( loud, UT_COM, UE_CLOSE );
        step4: ppt_con( ppt, PT_COM, PE_CLOSE );

    d <---- d   get: hangup
        step1: check 
                status: setup -> idle
             or
                status: frozen -> idle
                
        step2: led_con( dcom_led, LE_ON_OFF ); 
        step3: loud_con( loud, UT_COM, UE_CLOSE );


  slave:
    d <---- d   get:request
        step1: check && fill information 
               add (dacu request) to comlist

        step2: led_con( dcom_led, LE_BLINK ); 
        step3: loud_con( loud, UT_COM, UE_TIP );

    d <---- d   get: hangup ( request cancel )
        step1: query && remove from comlist
        step2: led_con( dcom_led, LE_BK_OFF ); 
        step3: loud_con( loud, UT_COM, UE_TIP_CLOSE );

    button pushed ( get com: setup )
        step1: query && remove from comlist
                send into com notification to deevice group by network
                control uic to tell get com
                status idle -> setup

        step2: led_con( dcom_led, LE_ON ); 
        step3: loud_con( loud, UT_COM, UE_COM );
        step4: ppt_con( ppt, PT_COM, PE_OPEN );
    
    d <---- d   get:response
        step1: query && remove from comlist
                set status = setup
            or 
                set status = frozen

        step2: led_con( dcom_led, LE_ON ); 

        step3: loud_con( loud, UT_COM, UE_COM );
    or
        step3: loud_con( loud, UT_COM, UE_FROZEN );
                ---------                   
        setp4: ppt_con( ppt, PT_COM, PE_OPEN );
    or 
        step4: none

    d <---- d   get: hangup( end hangup )
        step1: check
                status setup -> idle
            or
                status frozen -> idle

        step2: led_con( dcom_led, LE_ON_OFF ); 
        step3: loud_con( loud, UT_COM, UE_CLOSE );

        step4: ppt_con( ppt, PT_COM, PE_CLOSE );
    or
        setp4: none

    button pushed ( put com: hangup )
        step1: query && remove from comlist && put into s
                send into com notification to deevice group by network
                control uic to tell intocom
                status setup -> idle

        step2: led_con( dcom_led, LE_ON_OFF ); 
        step3: loud_con( loud, UT_COM, UE_CLOSE );
        step4: ppt_con( ppt, PT_COM, PE_CLOSE );

